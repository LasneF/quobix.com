<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Core Functions on quobix</title><link>https://quobix.com/vacuum/functions/core/</link><description>Recent content in Core Functions on quobix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Jun 2022 07:39:53 -0400</lastBuildDate><atom:link href="https://quobix.com/vacuum/functions/core/index.xml" rel="self" type="application/rss+xml"/><item><title>falsy</title><link>https://quobix.com/vacuum/functions/core/falsy/</link><pubDate>Sat, 22 Jul 2023 12:39:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/falsy/</guid><description>falsy will check that a given JSON Path does not exist, or has been not defined or is empty.
The value should not be true or an empty string &amp;quot;&amp;quot; or a null object
Example ruleset configuration my-important-rule: description: This is an important rule message: &amp;#34;&amp;#39;chicken&amp;#39; or &amp;#39;nugget&amp;#39; has been defined! Oh no! You need to remove it!&amp;#34; given: $.some.path then: - field: chicken function: falsy - field: nugget function: falsy View Spectral Equivalent</description></item><item><title>xor</title><link>https://quobix.com/vacuum/functions/core/xor/</link><pubDate>Fri, 01 Jul 2022 09:43:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/xor/</guid><description>xor will check that a only one of two properties is set/defined within a given JSON Path.
How do I use this function? This function is configured by the following functionOptions. Essentially the properties is a two element string array of the two properties you want to check against.
NAME DESCRIPTION TYPE REQUIRED? properties array of two properties to check against []string yes Example ruleset configuration xor-the-things: message: &amp;#34;Only one thing can exist&amp;#34; given: $.</description></item><item><title>undefined</title><link>https://quobix.com/vacuum/functions/core/undefined/</link><pubDate>Fri, 01 Jul 2022 09:40:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/undefined/</guid><description>undefined will check that a given JSON Path does not exist/has not been defined.
Example ruleset configuration my-important-rule: message: &amp;#34;The thing should NOT BE defined&amp;#34; given: $.some.thing then: - field: chicken function: undefined - field: nugget function: undefined View Spectral Equivalent
View Function Source</description></item><item><title>length</title><link>https://quobix.com/vacuum/functions/core/length/</link><pubDate>Fri, 01 Jul 2022 09:31:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/length/</guid><description>length will check that a value meets a minimum or a maximum length (or both).
How do I use this function? This function is configured by the following functionOptions. Essentially min and max determine if those limits are checked.
NAME DESCRIPTION TYPE REQUIRED? min The minimum floor you want to check for integer no max The maximum ceiling you want to check for integer no You need to set at least one of these properties.</description></item><item><title>defined</title><link>https://quobix.com/vacuum/functions/core/defined/</link><pubDate>Fri, 01 Jul 2022 09:11:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/defined/</guid><description>defined will check that a given JSON Path exists and has been defined
The value can be anything, or it can be empty, as long as the key exists, this function will pass.
For a more complete function use truthy.
Example ruleset configuration my-important-rule: message: &amp;#34;The thing should be defined&amp;#34; given: $.some.thing then: - field: chicken function: defined - field: nugget function: defined View Spectral Equivalent
View Function Source</description></item><item><title>casing</title><link>https://quobix.com/vacuum/functions/core/casing/</link><pubDate>Fri, 01 Jul 2022 09:01:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/casing/</guid><description>casing will check that a value is using the correct case.
How do I use this function? This function is configured by the following functionOptions. Essentially the type is the case you want to check for.
NAME DESCRIPTION TYPE REQUIRED? type The case you want to check string yes disallowDigits Don&amp;rsquo;t allow any digits in pattern boolean false separator.char Use a separator character string false separator.allowLeading Allow a leading separator or not boolean false type can be one of the following:</description></item><item><title>enumeration</title><link>https://quobix.com/vacuum/functions/core/enumeration/</link><pubDate>Fri, 01 Jul 2022 09:01:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/enumeration/</guid><description>enumeration will check that the enum values in a property, match the configured ones as a part of the rule.
How do I use this function? This function is configured by the following functionOptions. Essentially the values is a comma separated list of all the things you want to check against.
NAME DESCRIPTION TYPE REQUIRED? values Comma separated values to check against string yes Example ruleset configuration check-values: description: &amp;#34;Check the required values exist&amp;#34; type: style recommended: true given: $.</description></item><item><title>pattern</title><link>https://quobix.com/vacuum/functions/core/pattern/</link><pubDate>Sun, 26 Jun 2022 07:39:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/pattern/</guid><description>pattern is going to perform a regular expression check.
Supply a JSON Path and the regex that you want to match or notMatch.
vacuum uses Go RE2 Syntax for regular expressions.
How do I use this function? pattern is configured by the following functionOptions
NAME DESCRIPTION TYPE REQUIRED? match If set, value must match the regex pattern string no notMatch If set, value must not match the regex pattern string no Example ruleset configuration oas2-host-trailing-slash: description: &amp;#34;Host URL should not contain a trailing slash&amp;#34; type: style recommended: true given: &amp;#34;$.</description></item><item><title>schema</title><link>https://quobix.com/vacuum/functions/core/schema/</link><pubDate>Sat, 25 Jun 2022 07:39:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/schema/</guid><description>schema is a function that takes a JSON Schema definition, and validates that an object looked up via JSON Path matches that schema. If the object does not exist, the function will trigger a rule violation
How do I use this function? This function is configured by the following functionOptions
NAME DESCRIPTION TYPE REQUIRED? schema The schema you want to evaluate JSON Schema yes Example ruleset configuration openapi-tags: description: Global tags should exist, and be an array type: validation recommended: false given: &amp;#34;$&amp;#34; then: field: &amp;#34;tags&amp;#34; function: &amp;#34;schema&amp;#34; functionOptions: schema: type: &amp;#34;array&amp;#34; items: type: &amp;#34;object&amp;#34; minItems: 1 uniqueItems: true View Spectral Equivalent</description></item><item><title>alphabetical</title><link>https://quobix.com/vacuum/functions/core/alphabetical/</link><pubDate>Fri, 24 Jun 2022 07:39:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/alphabetical/</guid><description>alphabetical will check that a given array via a JSON Path is ordered alphabetically.
The value should not be false or an empty string &amp;quot;&amp;quot; or null
How do I use this function? This function is configured by the following functionOptions. Essentially the keyedBy value is the property of the object, that is to be checked for alphabetic ordering.
NAME DESCRIPTION TYPE REQUIRED? keyedBy the key to for sorting objects string no Example ruleset configuration openapi-tags-alphabetical: description: &amp;#34;Tags should be in alphabetical order.</description></item><item><title>truthy</title><link>https://quobix.com/vacuum/functions/core/truthy/</link><pubDate>Fri, 24 Jun 2022 07:39:53 -0400</pubDate><guid>https://quobix.com/vacuum/functions/core/truthy/</guid><description>truthy will check that a given JSON Path exists, or has been defined.
The value should not be false or an empty string &amp;quot;&amp;quot; or null
Example ruleset configuration my-important-rule: description: This is an important rule message: &amp;#34;&amp;#39;chicken&amp;#39; or &amp;#39;nugget&amp;#39; is missing! Oh no! You need to add it!&amp;#34; given: $.some.path then: - field: chicken function: truthy - field: nugget function: truthy View Spectral Equivalent
View Function Source</description></item></channel></rss>