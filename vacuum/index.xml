<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vacuum on quobix</title><link>https://quobix.com/vacuum/</link><description>Recent content in vacuum on quobix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Jun 2022 06:24:52 -0400</lastBuildDate><atom:link href="https://quobix.com/vacuum/index.xml" rel="self" type="application/rss+xml"/><item><title>Try vacuum online</title><link>https://quobix.com/vacuum/demo/</link><pubDate>Mon, 11 Jul 2022 06:25:04 -0400</pubDate><guid>https://quobix.com/vacuum/demo/</guid><description/></item><item><title>Core Concepts</title><link>https://quobix.com/vacuum/concepts/</link><pubDate>Fri, 01 Jul 2022 12:20:04 -0400</pubDate><guid>https://quobix.com/vacuum/concepts/</guid><description>There are three core concepts when it comes to vacuum.
Function Rule RuleSet Functions power Rules and Rules make up RuleSets What are Rules? Rules are filters that define a set of target values you want to check against. Rules define what to look up, where to find it and what to check for. Those options are then sent to a function that will execute that logic.
Rules enforce a company or product API style guide.</description></item><item><title>Why should you care?</title><link>https://quobix.com/vacuum/why/</link><pubDate>Fri, 01 Jul 2022 12:20:04 -0400</pubDate><guid>https://quobix.com/vacuum/why/</guid><description>Why should I care about OpenAPI? Open API is the de-facto choice for designing and documenting REST APIs. Following an API First123 strategy allows teams to design and define, test, mock and explore APIs without building any code.
It allows service providers and consumers to work independently, using a strongly defined, rich API contract.
Why do I need an OpenAPI linter? We are human and we suck at writing. Even when something looks syntactically correct, it will probably still read like garbage.</description></item><item><title>What is vacuum?</title><link>https://quobix.com/vacuum/about/</link><pubDate>Sun, 12 Jun 2022 06:25:04 -0400</pubDate><guid>https://quobix.com/vacuum/about/</guid><description>vacuum is an ultra-super-fast, lightweight OpenAPI linter and quality checking tool, inspired by Spectral.
It&amp;rsquo;s also compatible with existing Spectral rulesets and generates compatible Spectral reports.
vacuum can suck all the lint of a 5mb OpenAPI spec in about 250ms. Designed to reliably lint OpenAPI specifications, very, very quickly. Including very large ones. Spectral. can be quite slow when used as an API and does not scale for enterprise applications.</description></item><item><title>Installing vacuum</title><link>https://quobix.com/vacuum/installing/</link><pubDate>Sun, 12 Jun 2022 06:25:04 -0400</pubDate><guid>https://quobix.com/vacuum/installing/</guid><description>Install via homebrew. This the recommended approach. If you&amp;rsquo;re on MacOS or Linux, the easiest way to install vacuum is via homebrew.
install Install via NPM npm install Install via yarn yarn install Install via curl This is perhaps the most simple for CD/CD pipelines.
curl install Install via Docker. vacuum is available as a container, pull the image from Docker Hub.
docker pull To run via docker, add dshanley/vacuum as the docker command, like so:</description></item><item><title>Quick Start</title><link>https://quobix.com/vacuum/start/</link><pubDate>Sun, 12 Jun 2022 06:25:04 -0400</pubDate><guid>https://quobix.com/vacuum/start/</guid><description>Install vacuum via homebrew This the recommended approach. If you&amp;rsquo;re on MacOS or Linux, the easiest way to install vacuum is via homebrew.
install Lint your OpenAPI Specification Run the lint command with the -d (details) flag set:
lint Learn more about the lint command.
Explore the results through the console dashboard Run the dashboard command:
explore dashboard Learn more about the dashboard command.
Explore the results through an HTML report Run the html-report command:</description></item></channel></rss>