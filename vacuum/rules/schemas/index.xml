<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Schema Rules on quobix</title><link>https://quobix.com/vacuum/rules/schemas/</link><description>Recent content in Schema Rules on quobix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Jun 2022 07:39:53 -0400</lastBuildDate><atom:link href="https://quobix.com/vacuum/rules/schemas/index.xml" rel="self" type="application/rss+xml"/><item><title>oas2-discriminator</title><link>https://quobix.com/vacuum/rules/schemas/oas2-discriminator/</link><pubDate>Fri, 01 Jul 2022 06:13:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas2-discriminator/</guid><description>The discriminator as part of the Schema Object adds support for polymorphism. It is the property used to differentiate between other schema that inherit from it.
disciminator must be defined at this schema, and it must be in the required property list. When used, the value must be the name of this schema or any schema that inherits it.
Why did this violation appear? A discriminator was used incorrectly, or it could be missing a required mapping.</description></item><item><title>duplicated-entry-in-enum</title><link>https://quobix.com/vacuum/rules/schemas/duplicated-entry-in-enum/</link><pubDate>Thu, 30 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/duplicated-entry-in-enum/</guid><description>Enums allow API designers to define a pre-set list of values that are acceptable for input, or will be output.
Sometimes, copy-pasta happens and Enums become duplicated.
This rule checks every item is unique, in all enum values.
Why did this violation appear? A value listed in an enum has been duplicated. Each value needs to be unique.
Bad example paths: /items: get: parameters: - in: query name: sort description: &amp;#34;Sorting order for items&amp;#34; schema: type: string enum: [asc, desc, asc, asc] .</description></item><item><title>no-$ref-siblings</title><link>https://quobix.com/vacuum/rules/schemas/no-ref-siblings/</link><pubDate>Thu, 30 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/no-ref-siblings/</guid><description>JSON Schema References allow authors to re-use schemas for objects in multiple places. In the standard, $ref nodes are allowed sibling nodes (most commonly description) nodes that allow authors to describe the use of the reference in the context of the current definition.
OpenAPI is a superset of JSON Schema. However, in the OpenAPI standard, $ref values CANNOT place any sibling nodes (like a description) next to that $ref.
Essentially, OpenAPI will discard anything next to that $ref, it&amp;rsquo;s going to ignore it.</description></item><item><title>oas3-schema</title><link>https://quobix.com/vacuum/rules/schemas/oas3-schema/</link><pubDate>Thu, 30 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas3-schema/</guid><description>Perhaps the &amp;rsquo;lightest&amp;rsquo; linting there is. This rule ensures that the document provided, matches the schema of an OpenAPI 3.0+ document or OpenAPI 3.1.
The rule performs a schema match using JSON Schema
OpenAPI 3.0+ Schema OpenAPI 3.1+ Schema The schemas are built into libopenapi.
Why did this violation appear? The spec provided is not a valid OpenAPI 3 or OpenAPI 3.1 specification.
How do I fix this violation? Correct the specification violations, there isn&amp;rsquo;t any other way forward otherwise.</description></item><item><title>oas3-unused-component</title><link>https://quobix.com/vacuum/rules/schemas/oas3-unused-component/</link><pubDate>Thu, 30 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas3-unused-component/</guid><description>Components in OpenAPI 3 are reusable/sharable elements. Any other object can reference it, to save duplication.
Sometimes components are never referenced from anywhere, they are &amp;lsquo;unused&amp;rsquo; or &amp;lsquo;orphaned&amp;rsquo;.
This could be an oversight, it could be a case where the spec was changed and new schemas have replaced older ones, and those older components were never removed.
It&amp;rsquo;s good contract hygiene to prune anything that isn&amp;rsquo;t used, out of it.</description></item><item><title>oas2-oneOf</title><link>https://quobix.com/vacuum/rules/schemas/oas2-oneof/</link><pubDate>Wed, 29 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas2-oneof/</guid><description>Polymorphism is a concept that exists in JSON Schema. OpenAPI is a superset of JSON Schema which means it can inherit (or abandon) what ever it likes.
oneOf is a keyword that was not introduced into OpenAPI until version 3.0.
It&amp;rsquo;s a common mistake when working on specifications, reading newer docs and mixing and matching capabilities. This rule checks for those mistakes.
A note on Polymorphism We would recommend against using &amp;lsquo;oneOf&amp;rsquo; in general.</description></item><item><title>oas2-schema</title><link>https://quobix.com/vacuum/rules/schemas/oas2-schema/</link><pubDate>Wed, 29 Jun 2022 08:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas2-schema/</guid><description>Perhaps the &amp;rsquo;lightest&amp;rsquo; linting there is. This rule ensures that the document provided, matches the schema of a Swagger (OpenAPI 2.0) document.
The rule performs a schema match using JSON Schema
Click to see schema used to match against.
Why did this violation appear? The spec provided is not a valid OpenAPI 2 specification.
How do I fix this violation? Correct the specification violations, there isn&amp;rsquo;t any other way forward otherwise.</description></item><item><title>oas2-anyOf</title><link>https://quobix.com/vacuum/rules/schemas/oas2-anyof/</link><pubDate>Wed, 29 Jun 2022 07:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas2-anyof/</guid><description>Polymorphism is a concept that exists in JSON Schema. OpenAPI is a superset of JSON Schema which means it can inherit (or abandon) what ever it likes.
anyOf is a keyword that was not introduced into OpenAPI until version 3.0.
It&amp;rsquo;s a common mistake when working on specifications, reading newer docs and mixing and matching capabilities. This rule checks for those mistakes.
A note on Polymorphism We would recommend against using &amp;lsquo;anyOf&amp;rsquo; in general.</description></item><item><title>typed-enum</title><link>https://quobix.com/vacuum/rules/schemas/typed-enum/</link><pubDate>Wed, 29 Jun 2022 06:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/schemas/typed-enum/</guid><description>Enum definitions should match specified types
Why did this violation appear? One or more enum values do not match the specified type.
Bad example enum is supposed to be an array of string, but gets a mixed array.
/pizza: parameters: - in: query name: &amp;#34;party&amp;#34; schema: type: &amp;#34;string&amp;#34; enum: [&amp;#34;big&amp;#34;, 1, 0.33, false, &amp;#34;small&amp;#34;] ... Good Example /pizza: parameters: - in: query name: &amp;#34;party&amp;#34; schema: type: &amp;#34;string&amp;#34; enum: [&amp;#34;big&amp;#34;, &amp;#34;small&amp;#34;] .</description></item><item><title>oas2-unused-definition</title><link>https://quobix.com/vacuum/rules/schemas/oas2-unused-definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quobix.com/vacuum/rules/schemas/oas2-unused-definition/</guid><description>Definitions in OpenAPI 2 (Swagger) are reusable/sharable schema definitions. Any other object can reference it, to save duplication.
Sometimes schema definitions are never referenced from anywhere, they are &amp;lsquo;unused&amp;rsquo; or &amp;lsquo;orphaned&amp;rsquo;.
This could be an oversight, it could be a case where the spec was changed and new schemas have replaced older ones, and those older schema definitions were never removed.
It&amp;rsquo;s good contract hygiene to prune anything that isn&amp;rsquo;t used, out of it.</description></item></channel></rss>