<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Validation Rules on quobix</title><link>https://quobix.com/vacuum/rules/validation/</link><description>Recent content in Validation Rules on quobix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Jun 2022 07:39:53 -0400</lastBuildDate><atom:link href="https://quobix.com/vacuum/rules/validation/index.xml" rel="self" type="application/rss+xml"/><item><title>oas2-schema</title><link>https://quobix.com/vacuum/rules/validation/oas2-schema/</link><pubDate>Sat, 16 Jul 2022 04:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/validation/oas2-schema/</guid><description>Specifications for OpenAPI/Swagger need to be valid, meaning that even without linting, the specification must meet the OpenAPI/Swagger Schema.
What is this rule checking for? Making sure the specification has a valid structure and aligns with the standard. It&amp;rsquo;s using JSON Schema to validate against the schema
Why did this violation appear? The Swagger specification is invalid.
Spectral Equivalent The rule is equivalent to oas3-schema</description></item><item><title>oas3-schema</title><link>https://quobix.com/vacuum/rules/validation/oas3-schema/</link><pubDate>Sat, 16 Jul 2022 04:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/validation/oas3-schema/</guid><description>Specifications for OpenAPI need to be valid, meaning that even without linting, the specification must meet the OpenAPI Schema.
What is this rule checking for? Making sure the specification has a valid structure and aligns with the standard. It&amp;rsquo;s using JSON Schema to validate against the schema
Why did this violation appear? The OpenAPI specification is invalid.
Spectral Equivalent The rule is equivalent to oas3-schema</description></item><item><title>oas3-api-servers</title><link>https://quobix.com/vacuum/rules/validation/oas3-api-servers/</link><pubDate>Tue, 28 Jun 2022 04:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/validation/oas3-api-servers/</guid><description>When configuring Servers in OpenAPI, its important to ensure correctness, so tooling can inspect endpoints automatically.
Mis-configured server configurations will damage automation capabilities for the contract.
What is this rule checking for? Server definitions exist Contains URL URL is valid URL does not contain a trailing slash Why did this violation appear? The servers object is missing from the spec, or one of more entries contain an invalid URL.
Bad example servers: - url: &amp;#34;I am not a URL&amp;#34; - url: &amp;#34;httpWRONG//i-am-not-valid&amp;#34; - url: &amp;#34;https://i-end-with-a-slash.</description></item><item><title>no-eval-in-markdown</title><link>https://quobix.com/vacuum/rules/validation/no-eval-in-markdown/</link><pubDate>Fri, 24 Jun 2022 15:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/validation/no-eval-in-markdown/</guid><description>Some tools use JavaScript to render OpenAPI docs. They can be vulnerable to XSS attacks if they render HTML/markdown from descriptions that contain malicious eval() calls.
Why did this violation appear? There is JavaScript code using eval() defined in a description value.
Bad example paths: /snakes/cakes: post: description: &amp;#34;This is a hack attack. eval(&amp;#39;alert(\&amp;#39;hacked!\&amp;#39;)&amp;#39;)&amp;#34;; How do I fix this violation? Ensure there is no JavaScript or &amp;lt;script/&amp;gt; tags in any description.</description></item><item><title>no-script-tags-in-markdown</title><link>https://quobix.com/vacuum/rules/validation/no-script-tags-in-markdown/</link><pubDate>Fri, 24 Jun 2022 15:53:17 -0400</pubDate><guid>https://quobix.com/vacuum/rules/validation/no-script-tags-in-markdown/</guid><description>Some tools use JavaScript to render OpenAPI docs. They can be vulnerable to XSS attacks if they render HTML/markdown from descriptions that contain malicious &amp;lt;script&amp;gt; code.
This rule protects against potentially being attacked by malicious code. It&amp;rsquo;s a really bad idea to execute randomly sourced remote JavaScript from within your own application.
Why did this violation appear? There is JavaScript code being injected via a &amp;lt;script&amp;gt; tag defined in a description value.</description></item></channel></rss>